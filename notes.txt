                                        REACT   
PUBLIC FOLDER
- files in there are server directly to the user we dont need to specify there name and file location 
- dont need to specify there location 
- also directly accesable in index html 

USESATATE
-  useState return us an array which has two values in it the main variable and the editor to the main value
to do : "if is editting is true/false which is tob "

HANDLE
-when writing a function we use handle before it tp specfy how it is a 
- is used to specify that this is a function that is going to trigger a change

HOOK IMPORT
-when using a state you have to inmport the state in each component
-imort states in each components
-each compnent manages its own useState

SWITTICHING BOOEAIN IN JS   
-to switch the value, of the boolein we can do is change the state where were we lanuch a anonumous fumction which switchs the value using "!"
code: "prevValue => !prevVlaue" this should switch the value for what it is now everythime this anoumous function is called

When updating the the state based on the previous value of the state,
->you should not do it directly you should pass you should pass on  a function which whould then do the same
->doing it like this is the best practise
->state updation is schedules by react, sheduling
->when the state change is shedules it looks for the previous value before that time, when we schedule like the (!isEditting) we are using the inital value not the value we have after some other state chage might have took place 

- if we use the anonymous function method then in that case we are using the  value in that instant 
hello
wallaikum assalam
hello are u there
three
four
five
six


USiNG OR REUSING COMPONENT
-change in one callback of the component wont affect other
-creates new isolated compnent

TERNARY EXPRESSION 
{CODITION ? ifTrue : elseifflase}

DEFAULT-VALUE
it kind of allows us to set the itnital value to the input field or something  but then allows the user to change it also 

VALUE
in case of value you are done no change and you are the one who controls the value it is not interactible

ON CHANGE
-> wherver a change happpens in a given element, trigger a function or something
-> it also reurns a object to the triggered function which contains the change which took place in the element


TWO WAY BINDING -- UPDATING STATE BASED ON THERE PREVIOUD value
    //here in this case we took the value from th  e input field using the onChange which gives the triggered function acess to the value that was cahnged- 
    //then we take that value and put in a state -- this state has a intial value we put in the component callback - then everytime a onchange calls the function it also chages the value of this variable which we set as the NEW value of the VALUE attribute

    //in order to get acess to the value it passed on to the function we can use "event.target.value" 

.MAP
it creates a new array by performing some function on each array
we can then make a new array based of off that array beased of off that we can also iterate on each value in there
for each is maily used in diff

ARRAYS
arrays are technincally objects
if your state is an object or an  array you update it in an imutable way
-i.e we first create a copy of our object or array and then use that to update the value
make a copy first  -- then update that
else if we update it the other way we would be updating the old value and also immediately
so if we try to do it at more thna one place it can cause problims


//STATES
states that depend on an oubjectg or an array should be updated in imutable way 
i.e we first need to ceate a copy of the array or object that whose state we need to update
- also coz of the same thing that was with the callback to update the value based on the previous value coz react cant directly do anything directly so -- it schedueles them based of the value in that instat so if we do this noramally and we end updating the state of th e c


LIFTING THE STATE UP 

we need to know which player is acitve and that needs to be known in more that one comonent so in order to achieve that we can do that 
inorder to do that we need to get acess


so we dont manage the state in the compnents but in the closest parent component
so in this case we put it in the app Component

after that we have to pass the same data from the palrent/ancestor component to the child compnent

NULL VS UNDEFINED 

undefined is a self assigned value 
null is when we delibretly assign value
even lets say there i


SWITCHING BEFORE PLAYERS

need to know which player is active in both the 

lets say se need to save the data





DIFFERENT TRAIL 2

react is not fundametally -- doing any thing new it is just, using the state updation -- what react does it schedules when to execute these commands

EG
major example of this can be seen in just say 

setState(!previousValue)
setState(!previousValue)

this code will not perform as you might expect it to -- i.e the value will return back to the value what it was before but it changes and dosen  retur back -- in this case react is whenever an callback for an rerender takes palce all the action which are not immediate are sheduled -- and at  the time of sheduling these we dont what or how the value is going to chnage so in that case --- react will chage the value based on the value it was beore not waht it would have been changed to later on -- so in oreder for this to not happen we have to delibretly call for the previous value
then in that case it will work  -- i.e delibretly calling based on the previous state value


here is what happens so first we get the value from the input field by making it call a function ONCHANGE -- once the onchage takes place what happens is the value gets passed to the function which is called from the inside once it recieves the value (which it recieves very frequtly -- every time a chage happens ) -- then we seThe sate of some variable usign this  value and then we use that as an value for Both the INPUT FIELD and the TEXT which is showed after that
accessing the value inside of a function in case

*we use value inste of deafautl value because -- in case of value state is managed by react, also by default value is uneditable this "value" case but we can make it editabble by using the onChange and then on change we take that value and we give it as an input to the back to the value prop... like that we will be able to see the effects as well* 

TWO WAY BINDING  
- in this way, we are getting a value out input field(listening to ONCHANGE), also then feeding it back to it, like in this case we feeded it back using a state which we then use to update the value of that VALUE attribute


BUILDING A DYNAMICAL BOARD
-we use the coulums and row but insted we use the nested setup of rows and columns where the both of them are represented by the arrays


PUTTING THE MARS IN

            -- this is the fuction that will be called in the button and will recive the cordinats of the button we need to change 
          -- as we recieve the value we need to change based off of that we need to create a new state of the intial gameboard whcih we then use to update the ui 
          -- we then use this state and based off of the previous value we change its value in the place where the used clicked
          -- but BUT, we can chang the value of the array or an orbejct based on the previous prctise dirctly but it is not a best Practise 
          -- so we first create a copy of the inital state and then based off of that we  change the value of the state and use that to update the UI... so we first need to make a copy of this to do this

the lesson in this case was that when changing the value of an object or an array we have to do it in such that we first make a copy of the object/array and then use that to make the required changes
when you need to change the value of the object and the state dont do it directly copy that shi first



LIFTING STATE UP

we manage the state in amcestor component to mke sure that they are accessable to all the child elemets or whereer they are used\


.MAP

it is  specifially designed for the interationover arrays while as FOR OF is a genral thing 



 




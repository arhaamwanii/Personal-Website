                                        REACT   
PUBLIC FOLDER
- files in there are server directly to the user we dont need to specify there name and file location 
- dont need to specify there location 
- also directly accesable in index html 

USESATATE
-  useState return us an array which has two values in it the main variable and the editor to the main value
to do : "if is editting is true/false which is tob "

HANDLE
-when writing a function we use handle before it tp specfy how it is a 
- is used to specify that this is a function that is going to trigger a change

HOOK IMPORT
-when using a state you have to inmport the state in each component
-imort states in each components
-each compnent manages its own useState

SWITTICHING BOOEAIN IN JS   
-to switch the value, of the boolein we can do is change the state where were we lanuch a anonumous fumction which switchs the value using "!"
code: "prevValue => !prevVlaue" this should switch the value for what it is now everythime this anoumous function is called

When updating the the state based on the previous value of the state,
->you should not do it directly you should pass you should pass on  a function which whould then do the same
->doing it like this is the best practise
->state updation is schedules by react, sheduling
->when the state change is shedules it looks for the previous value before that time, when we schedule like the (!isEditting) we are using the inital value not the value we have after some other state chage might have took place 

- if we use the anonymous function method then in that case we are using the  value in that instant 
hello
wallaikum assalam
hello are u there
three
four
five
six


USiNG OR REUSING COMPONENT
-change in one callback of the component wont affect other
-creates new isolated compnent

TERNARY EXPRESSION 
{CODITION ? ifTrue : elseifflase}

DEFAULT-VALUE
it kind of allows us to set the itnital value to the input field or something  but then allows the user to change it also 

VALUE
in case of value you are done no change and you are the one who controls the value it is not interactible

ON CHANGE
-> wherver a change happpens in a given element, trigger a function or something
-> it also reurns a object to the triggered function which contains the change which took place in the element


TWO WAY BINDING -- UPDATING STATE BASED ON THERE PREVIOUD value
    //here in this case we took the value from th  e input field using the onChange which gives the triggered function acess to the value that was cahnged- 
    //then we take that value and put in a state -- this state has a intial value we put in the component callback - then everytime a onchange calls the function it also chages the value of this variable which we set as the NEW value of the VALUE attribute

    //in order to get acess to the value it passed on to the function we can use "event.target.value" 

.MAP
it creates a new array by performing some function on each array
we can then make a new array based of off that array beased of off that we can also iterate on each value in there
for each is maily used in diff

ARRAYS
arrays are technincally objects
if your state is an object or an  array you update it in an imutable way
-i.e we first create a copy of our object or array and then use that to update the value
make a copy first  -- then update that
else if we update it the other way we would be updating the old value and also immediately
so if we try to do it at more thna one place it can cause problims


//STATES
states that depend on an oubjectg or an array should be updated in imutable way 
i.e we first need to ceate a copy of the array or object that whose state we need to update
- also coz of the same thing that was with the callback to update the value based on the previous value coz react cant directly do anything directly so -- it schedueles them based of the value in that instat so if we do this noramally and we end updating the state of th e c


LIFTING THE STATE UP 

we need to know which player is acitve and that needs to be known in more that one comonent so in order to achieve that we can do that 
inorder to do that we need to get acess

so we dont manage the state in the compnents but in the closest parent component
so in this case we put it in the app Component

NULL VS UNDEFINED 

undefined is a self assigned value 
null is when we delibretly assign value

//
..
//
//
.
.
.
.
.